###

Technologies used:
- API pixe.la
- post_get_delete requests
- tkinter
- environmental variables

This is the program that allows the user to track the income over the days. 
User enters date and sum earned per that day. The program creates the graph, similar the one used by GitHub daily activities, showing earnings per day, avg, min and max, as well as number of active days.
In addition, the user can delete any data for the selected date.
###

import requests
from tkinter import *
from tkinter import messagebox
import webbrowser
import os

USERNAME = os.environ["USERNAME"]
TOKEN = os.environ["TOKEN"]
GRAPH_ID = os.environ["GRAPH_ID"]

pixela_endpoint = "https://pixe.la/v1/users"
user_params = {
    "token": TOKEN,
    "username": USERNAME,
    "agreeTermsOfService": "yes",
    "notMinor": "yes"
}

# ===========================================================================================

# The following command creates the Profile Page in Pixela. Commented when already done.
# response = requests.post(url=pixela_endpoint, json=user_params)
# print(response.text)


# ============================================================================================

graph_endpoint = f'{pixela_endpoint}/{USERNAME}/graphs'
graph_config = {
    'id': GRAPH_ID,
    'name': 'PMU_Income',
    'unit': 'GBP',
    'type': 'int',
    'color': 'shibafu',
}

headers = {
    'X-USER-TOKEN': TOKEN,
}


# The following command creates the Graph in Pixela. Commented when already done.
# response = requests.post(url=graph_endpoint, json=graph_config, headers=headers)
# print(response.text)

# =============================================================================================
def delete_pixel():
    delete_endpoint = f"{graph_endpoint}/graph1/{date_name.get()}"
    response = requests.delete(url=delete_endpoint, headers=headers)
    print(response.text)
    if response.text[12:19] == "Success":
        messagebox.showinfo(title="Success", message="Item was deleted")
        date_name.delete(0, END)
    else:
        messagebox.showerror(title="Error", message="Please retry this request.\nYour request for some APIs will be rejected 25% of the time because you are not a Pixela supporter.")



def open_graph():
    webbrowser.open(f'{graph_endpoint}/{GRAPH_ID}.html')  # Opens Pixela Graph
    date_name.delete(0, END)
    sum_name.delete(0, END)


def add_pixel():
    # The following command adds data to Pixela.
    add_value_endpoint = f'{graph_endpoint}/{GRAPH_ID}'
    add_value_config = {
        'date': date_name.get(),
        'quantity': sum_name.get(),
    }
    response = requests.post(url=add_value_endpoint, json=add_value_config, headers=headers)
    print(response.text)
    if response.text[12:19] == "Success":
        messagebox.showinfo(title="Success", message="Item added successfully")
        date_name.delete(0, END)
        sum_name.delete(0, END)
    else:
        messagebox.showerror(title="Error", message="Please retry this request. Your request for some APIs will be rejected 25% of the time because you are not a Pixela supporter.")



# ===================================== UI SETUP ====================================

window = Tk()
window.title("Habit Tracker")
window.config(padx=50, pady=50)

date_label = Label(text="Enter Date (YYYYMMDD):")
date_label.grid(row=0, column=0)

date_name = Entry(width=33)
date_name.focus()
date_name.grid(row=0, column=1)

sum_label = Label(text="Enter Sum Earned:")
sum_label.grid(row=1, column=0)

sum_name = Entry(width=33)
sum_name.grid(row=1, column=1, sticky="e")

add_button = Button(text="Update data", command=add_pixel)
add_button.grid(row=1, column=3, pady=20, sticky="ew")

show_graph_button = Button(text="Show Graph", command=open_graph)
show_graph_button.grid(row=3, column=1, pady=10, sticky="ew")

delete_button = Button(text="Delete data", command=delete_pixel)
delete_button.grid(row=0, column=3, sticky="ew")

window.mainloop()
